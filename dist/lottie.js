import{DotLottie as L}from"https://esm.sh/@lottiefiles/dotlottie-web";document.addEventListener("DOMContentLoaded",async()=>{const i=new Map,s=(t,o,e,l)=>{let a=t.getAttribute(o);if(a===null){const r=o.replace(/^data-/,"");a=t.dataset[r]}if(a==null)return e;switch(l){case"boolean":return a==="true"||a==="1"||a==="";case"number":return parseFloat(a);case"string":default:return a}},f=document.querySelector("html").lang||"en",u=document.querySelectorAll('div[data-animation="lottie"]');u.forEach(t=>{const o=t.getAttribute(`data-src-${f}`);o&&t.setAttribute("data-src",o)});async function m(t){if(i.has(t))return i.get(t);const o=t.dataset.src;if(!o)return null;const e=s(t,"data-autoplay",!1,"boolean");s(t,"data-loop",!1,"boolean");const l=s(t,"data-speed",1,"number"),a=s(t,"data-direction",1,"number"),r=s(t,"data-play-once",!1,"boolean"),y=s(t,"data-fit","contain","string"),h=s(t,"data-align-x",.5,"number"),b=s(t,"data-align-y",.5,"number"),p=t.querySelector("img");p&&p.remove();const c=document.createElement("canvas");c.style.width="100%",c.style.height="100%",t.appendChild(c);try{const n=new L({canvas:c,src:o,autoplay:e,speed:l,mode:a===-1?"reverse":"normal",loop:!0,layout:{fit:y,align:[h,b]}});return await new Promise(v=>{n.addEventListener("load",v,{once:!0})}),n.customSettings={shouldAutoplay:e,playOnce:r,hasCompleted:!1,isReady:!0},r&&n.addEventListener("complete",()=>{n.customSettings.hasCompleted=!0,n.pause(),n.stop()}),i.set(t,n),n}catch{return null}}function d(t,o){const e=i.get(t);if(!e||!e.isLoaded)return;const{shouldAutoplay:l,playOnce:a,hasCompleted:r}=e.customSettings;if(o&&l){if(e.setLoop(!1),a&&r||e.isPlaying)return;requestAnimationFrame(()=>{e.stop(),e.unfreeze(),e.play()})}else(!a||a&&!r)&&e.pause()}await Promise.all([...u].map(t=>m(t)));const g=new IntersectionObserver(t=>{t.forEach(({target:o,isIntersecting:e})=>{d(o,e)})},{threshold:.1,rootMargin:"100px"});document.addEventListener("click",t=>{if(!t.target.closest(".w-tabs"))return;t.target.closest(".w-tabs").querySelectorAll('div[data-animation="lottie"]').forEach(e=>{const l=e.offsetParent!==null;d(e,l)})},!0),u.forEach(t=>{g.observe(t)})});
